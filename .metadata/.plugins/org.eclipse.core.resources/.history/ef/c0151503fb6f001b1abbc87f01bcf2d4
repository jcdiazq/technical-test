package com.wolox.challenge.controllers;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.wolox.challenge.domain.AlbumPermission;
import com.wolox.challenge.exception.ExceptionDataBase;
import com.wolox.challenge.repository.IAlbumsPermitsRepository;

@RestController
public class ControllerAlbumsPermissions {
	
	private static final Logger log = LoggerFactory.getLogger(ControllerAlbums.class);
	
	@Autowired
	private IAlbumsPermitsRepository repoAlbumsPermits;
	
	@GetMapping("/v1/albums-permits")
	public List<AlbumPermission> getAllAlbumsPermits(){
		return (List<AlbumPermission>) repoAlbumsPermits.findAll();
	}
	
	@PostMapping(value="/v1/albums-permits", consumes=MediaType.APPLICATION_JSON_VALUE, produces= {MediaType.APPLICATION_JSON_VALUE})
	public AlbumPermission createAlbumPermit(@RequestBody AlbumPermission albumPermit) {
		try {
			return repoAlbumsPermits.save(albumPermit);
		} catch (Exception e) {
			// TODO: handle exception
			log.error(String.format("Se presentó un error en la consulta. %s", e));
			throw new ExceptionDataBase(String.format("Error Información no Recuperada. %s",e.toString()));
		}
	}
	
	@PutMapping(value="/v1/albums-permits/{id}", consumes=MediaType.APPLICATION_JSON_VALUE, produces= {MediaType.APPLICATION_JSON_VALUE})
	public AlbumPermission updateAlbumPermit(@PathVariable(value="id") final int id, @RequestBody AlbumPermission albumPermit) {
		albumPermit.setId(id);
		return repoAlbumsPermits.save(albumPermit);
	}

}
